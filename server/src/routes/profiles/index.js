import { Router } from 'express';
import { getProfile, getProfileByUsername, createProfile, updateProfile, deleteProfile, searchProfiles, getAllProfiles, } from './controller.js';
import { validateData, validateParams, validateQuery } from '../../middlewares/validationMiddleware.js';
import { verifySupabaseAuth, verifyResourceOwnership, requireAdmin } from '../../middlewares/authMiddleware.js';
import { updateProfileSchema, signupProfileSchema, userIdParamsSchema, usernameParamsSchema, searchQuerySchema, paginationQuerySchema, } from '../../db/profilesSchema.js';
const profileRouter = Router();
profileRouter.get('/search', validateQuery(searchQuerySchema), searchProfiles);
profileRouter.get('/all', verifySupabaseAuth, requireAdmin, validateQuery(paginationQuerySchema), getAllProfiles);
profileRouter.get('/by-username/:username', validateParams(usernameParamsSchema), getProfileByUsername);
profileRouter.get('/:userId', validateParams(userIdParamsSchema), getProfile);
profileRouter.post('/', validateData(signupProfileSchema), createProfile);
profileRouter.put('/:userId', verifySupabaseAuth, verifyResourceOwnership, validateParams(userIdParamsSchema), validateData(updateProfileSchema), updateProfile);
profileRouter.delete('/:userId', verifySupabaseAuth, verifyResourceOwnership, validateParams(userIdParamsSchema), deleteProfile);
export default profileRouter;
